@startuml

actor "users\n* recommendation API\n* restbase\n* graphoid\n* maps\n* bots\n* ..." as user

[UI]

() "SPARQL\nendpoint" as sparql
node wdqs {
  database "wdqs-blazegraph" as blazegraph
  [updater] as updater
  [categories update] as cat_updater
}
database "Kafka main" as kafka
() "Recent Changes" as rc

node "external services" as ext {
  () "http://dbpedia.org/sparql" as dbpedia
  () "http://sparql.europeana.eu/" as europeana
  () "http://sparql.wikipathways.org/" as wikipathways
  () "..." as others
}

node "Mediawiki" as mw {
  [Mediawiki]
  [Wikibase] as wikidata
  database "Mediawiki Dumps" as dumps
}

note bottom of ext
  external services
  are whitelisted
  and accessed through
  an HTTP proxy
end note

rc .. Mediawiki

user .> sparql
sparql <. UI

sparql -down- blazegraph

updater .> blazegraph: updates
blazegraph <. cat_updater: updates

Mediawiki .> dumps: produce categories dumps
cat_updater ..> dumps: consumes categories dumps

Mediawiki .> kafka: publish changes

wikidata .> sparql: wbqc


updater .> wikidata: retrieve\nfull changes
updater .> kafka: subscribe\nto updates
updater .> rc: subscribe\nto updates

note right of rc
  Depending on configuration
  either Kafka or Recent
  Changes is used as a source
  of changes.
end note


blazegraph ..> dbpedia: <<federates>>
blazegraph ..> europeana: <<federates>>
blazegraph ..> wikipathways: <<federates>>
blazegraph ..> others: <<federates>>

@enduml